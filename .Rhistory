pwd
install.packages(c("slidify", "ggplot2", "devtools"))
install.packages("KernSmooth")
library ('KernSmooth')
getwd
getwd()
q()
add<-function(x,y) {
x+y
}
add (3,5)
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
res <-gather(student2,sex_class,count, -grade)
res <-gather(students2,sex_class,count, -grade)
res
?separate
separate(res,sex_class, into = c("sex","class"))
submit()
students3
submit()
reset()
submit()
?spread()
?spread
submit()
submit()
submit()
extract_numeric("class5")
submit()
submit()
students4
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
passed
failed
passed <- mutate(passed,status=passed)
passed <- mutate(passed,status="passed")
failed <- mutate(failed,status="failed")
?rbind_list
rbind_list(passed,failed)
sat
submit()
submit()
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package=lubridate)
today()
this_day<-today()
this_day
day(this_day_)
day(this_day)
wday(this_day)
wday(this_day, label = TRUE)
now()
this_moment<-now()
this_moment
hour(this_moment)
my_date<-ymd("1989-05-17"
)
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55).
update(this_moment, hours=8, minutes=34, seconds=55)
this_moment
this_moment<-update(this_moment, hours=23, minutes=09, seconds=55)
this_moment
nyc<-now("America/New_York")
nyc
depart<-nyc + days(2)
depart
depart<-update(depart, hours=17, minutes=34)
depart
arrive<-depart+hours(15)+minutes(50)
?with_tz
with_tz(arrive,"Asia/Hong_Kong")
arrive<-with_tz(arrive,"Asia/Hong_Kong")
arrive
last_time<-mdy("June 17, 2008",tz="Singapore")
last_time
?new_interval
how_long<-new_interval(last_time,arrive)
as.period(how_long)
stopwatch()
x<-rnorm(100)
hist(x)
y<-norm(100)
y<-rnorm(100)
plot(x,y)
z<-rnorm(100)
plot(x,z)
par(mar = c(4.4.2.2))
par(mar = c(4,4,2,2))
plot(x,y)
example(points)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", "56b637a5baffac62cad9")
myapp <- oauth_app("ef2030fdb11db87d55be", "f18d521b6cf39cd9afc60cc630dff068a2219bcf")
q()
myapp <- oauth_app("github", "f18d521b6cf39cd9afc60cc630dff068a2219bcf")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("httpuv")
library(httpuv)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
?oauth_endpoints
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
q()
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", temp)
acs<- read.csv (temp)
acs
library(sqldf)
install.packages(sqldf)
install.packages("sqldf"")
""
install.packages("sqldf")
sqldf("select pwgtp1 from acs")
library(sqldf)
sqldf("select pwgtp1 from acs")
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select distinct AGEP from acs")
library(XML)
hurl <- "http://biostat.jhsph.edu/~jleek/contact.html"
con <- url(hurl)
htmlCode <- readLines(con
)
close(con)
sapply(htmlCode[c(10, 20, 30, 100)], nchar)
getwd()
data <- read.csv("./getdata-wksst8110.for", header = TRUE)
file_name <- "./getdata-wksst8110.for"
df <- read.fwf(file=file_name,widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4), skip=4)
sum(df[, 4])
?read.fwf
setwd("C:/Users/puran02/Desktop/Coursera/RepData_PeerAssessment1")
?read.csv
data<-read.csv("activity.csv")
tapply(data$steps,data$date,FUN=sum,na.rm=true)
tapply(data$steps,data$date,FUN=sum,na.rm=TRUE)
tapply(data$steps,data$date,FUN=mean,na.rm=TRUE)
data <- read.csv("activity.csv", colClasses = c("integer", "Date", "factor"))
data
?na.omit
rownames
rownames(data)
names(data)
?aes
??aes
histogram(date,steps)
ggplot(noNA, aes(date, steps)) + geom_bar(stat = "identity", colour = "steelblue", fill = "steelblue", width = 0.7) + facet_grid(. ~ month, scales = "free") + labs(title = "Histogram of Total Number of Steps Taken Each Day", x = "Date", y = "Total number of steps")
library(ggplot2)
ggplot(noNA, aes(date, steps)) + geom_bar(stat = "identity", colour = "steelblue", fill = "steelblue", width = 0.7) + facet_grid(. ~ month, scales = "free") + labs(title = "Histogram of Total Number of Steps Taken Each Day", x = "Date", y = "Total number of steps")
ggplot(data, aes(date, steps)) + geom_bar(stat = "identity", colour = "steelblue", fill = "steelblue", width = 0.7) + facet_grid(. ~ month, scales = "free") + labs(title = "Histogram of Total Number of Steps Taken Each Day", x = "Date", y = "Total number of steps")
total.steps <- tapply(data$steps, data$date, FUN=sum, na.rm=TRUE)
qplot(total.steps, binwidth=1000, xlab="total number of steps taken each day")
mean(total.steps, na.rm=TRUE)
median(total.steps, na.rm=TRUE)
names(data)
stepsTotalPerDay <- tapply(data$steps, data$date, sum)
stepsTotalPerDay
total.steps
hist(total.steps, breaks = 6, main = "Frequency of number of steps per day",
xlab = "Number of steps per day", ylab = "Frequency", col = "red")
stepsMeanPerDay <- tapply(data$steps, data$date, mean, na.rm = T)
stepsMeanPerDay
mean(total.steps)
total.steps
median(total.steps)
data[is.na(data)]= 1
knit2html(PA1_template.Rmd)
library(knitr)
knit2html(PA1_template.Rmd)
getwd
getwd()
ls
dir
ls()
dir()
knit2html("PA1_template.Rmd")
ls
dir()
